C51 COMPILER V9.60.0.0   BSP_PWM                                                           12/10/2022 18:42:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BSP_PWM
OBJECT MODULE PLACED IN ..\Output\bsp_pwm.obj
COMPILER INVOKED BY: C:\keil_v5\C51\BIN\C51.EXE ..\User\pwm\bsp_pwm.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User\pwm) DEBUG
                    - OBJECTEXTEND PRINT(..\Listing\bsp_pwm.lst) TABS(2) OBJECT(..\Output\bsp_pwm.obj)

line level    source

   1          # include "bsp_pwm.h"
   2          
   3          //中断时间
   4          u8 gtim_h = 0;
   5          u8 gtim_l = 0;
   6          
   7          //周期
   8          u8 gtim_scale = 0;
   9          
  10          //占空比
  11          u8 gduty = 0;
  12          
  13          //1ms 延迟函数
  14          void delay_ms(u8 z){
  15   1      
  16   1          u8 i = 0;
  17   1          while(z --){
  18   2              for (i = 0; i <= 120; i++);
  19   2          }
  20   1      }
  21          
  22          //pwm 初始化
  23          void pwm_init(u8 tim_h, u8 tim_l, u8 tim_scale, u8 duty){
  24   1      
  25   1          //初始化中断时间和周期占空比
  26   1          gtim_h = tim_h;
  27   1          gtim_l = tim_l;
  28   1          gtim_scale = tim_scale;
  29   1          gduty = duty;
  30   1      
  31   1          //定时器0 工作模式M1
  32   1          TMOD |= 0x01;
  33   1      
  34   1          //中断时间
  35   1          TH0 = gtim_h;
  36   1          TL0 = gtim_l;
  37   1      
  38   1          //定时器T0 开启
  39   1          ET0 = 1;
  40   1      
  41   1          //总中断开启
  42   1          EA = 1;
  43   1      
  44   1          //定时器T0 开启
  45   1          TR0  = 1;
  46   1      }
  47          
  48          //传入占空比
  49          void pwm_set_duty_cycle(u8 duty){
  50   1          gduty = duty;
  51   1      }
  52          
  53          //中断函数
  54          void pwm() interrupt 1{
C51 COMPILER V9.60.0.0   BSP_PWM                                                           12/10/2022 18:42:39 PAGE 2   

  55   1      
  56   1          //记录时间
  57   1          static u8 time = 0;
  58   1      
  59   1          TH0 = gtim_h;
  60   1          TL0 = gtim_l; 
  61   1      
  62   1          time ++;  
  63   1      
  64   1          if (time >= gtim_scale) time = 0;
  65   1      
  66   1          if (time <= gduty) P0 = 0xff;
  67   1          else P0 = 0x00;
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     92    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
